syntax = "proto3";

import "google/protobuf/Timestamp.proto"; 

option csharp_namespace = "SwarmingFleet.Contracts";

package SwarmingFleet;

//
service Service {
    // 連線
    rpc Connect (ConnectRequest) returns (ConnectReply);
    // 測量延遲
    rpc Ping (PingRequest) returns (PingReply);
    // 回應工作結果並請求新工作
    rpc Handle (HandleRequest) returns (HandleReply); 
}

// 運算請求
message HandleRequest {
    // 本地時間
    int64 timestamp = 1;
    // 識別碼
    string uuid = 2;
    // 欲排回佇列的任務
    CrawlTask task = 3;
}
// 運算回應
message HandleReply { 
    // 請求時間
    int64 timestamp = 1;
    // 仲介端之接收時間
    int64 brokerTimestamp = 2;
    // 配給的下個任務
    CrawlTask task = 3;
    // 狀態
    bool status = 4;
}

 
// Ping 請求
message PingRequest { 
    // 目前時間
    int64 timestamp = 1;
}
// Ping 回應
message PingReply {
    // 請求時間
    int64 timestamp = 1;
    // 仲介端之接收時間
    int64 brokerTimestamp = 2;
}


// 連接請求
message ConnectRequest {
    // 目前時間
    int64 timestamp = 1; 
    // 工作機
    Worker worker = 4;
}

// 連接回應
message ConnectReply {
    // 請求時間
    int64 timestamp = 1; 
    // 仲介端之接收時間
    int64 brokerTimestamp = 2;
    // 配發給工作機的識別碼
    string uuid = 3;
    // 連接狀態
    bool isConnected = 4;
    // 網路位址
    string address = 5; 
    // 配給的新任務
    CrawlTask task = 6;
}

// 任務
message CrawlTask {
    // 連結
    repeated string urls = 1;
}
 
 // 工作機
 message Worker {
    // 名稱
	string name = 1;
    // 作業系統
	string operationSystem = 2;
    // 記憶體大小
	uint64 memorySize = 3;
    // 處理器
	repeated string processors = 4;
    // MAC 位址
	repeated string macAddresses = 5;
} 
